const int NODE_TYPE_SPAWN = 0x0; 
const int NODE_TYPE_MODEL = 0x3;
const int NODE_TYPE_LIGHT = 0x4; 
const int NODE_TYPE_Matrix_Animation = 0x1C;
const int NODE_TYPE_Matrix_TRIGGER = 0x1F; 


typedef struct {
  float x;
  float y;
  float z;
} VECTOR_3F;

typedef struct {
  float x;
  float y;
  float z;
  float w;
} VECTOR_4F;

LittleEndian();

UINT version;
UINT B;
UINT C;
UINT nodeNum;

  struct { 
    uint type;
    uint index;
    uint parentIndex;
    UINT Length;
    char Name[Length]; 

    VECTOR_3F coordinates;
    VECTOR_3F normal;
    VECTOR_4F orientation; 

      uint b;
      uint b;
      uint ertt;
      uint b;
      uint num01;   
      uint num00;  
 
    struct {
      UINT Length;
      char Name3[Length]; 
      uint b;
      uint b;
      uint b;
      float brt[7];
      int b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
      uint b;
    } obj[num00] <optimize=false>;

    UINT num;
    struct {
      UINT C;
      UINT Length;
      char Name[Length];
      UINT Length;
      char Name2[Length];
      UINT Length;
      char Name3[Length];
   } u2[num] <optimize=false>;

    uint b3;
    uint b4;
    uint b5;  
    uint b6;
    uint b7;
    uint b8;
    uint b9;     
    uint b10;

    UINT b11;
    float b12;
    uint b13;

    if (version > 46)
    {
      uint b14;
     
    };

    switch (type) 
    {
      case 0:

          break;
      case 2:
        uint b;
        uint b;
          uint b;
          uint b;
          uint b;  
          uint b;
          uint b;
          uint b;
          uint b; 
          uint b;
          uint b;
          uint b;
          uint b;
          uint b;
          uint b;  



        break;
      case 3:    
        uint b15; 
        uint b16;
        uint b17;
        uint b18; 
        if (version > 5)
        {
          uint b19;  
          uint b20;
          uint b21;  
          uint b22;
          uint b23;
          uint b24;  
        };
        if (version > 47)
        {
          uint b25;
          uint b26;
        }
        break;
      case NODE_TYPE_LIGHT:
        if (b == 0) {
            struct {
              int a;
              float b;
              float b;
              float b;
            } g[4];
              uint b;
              uint b;
              uint b;
        } else
        {
              float g[8];
              uint b;
              uint b;
              uint b;
              float g1[4];
        }
          uint b;
          uint b;
          uint b; 
          uint b;
          uint b; 
          uint b;
          
          uint b;
        break;
      case 5:
        uint b14; 
        uint num;
        struct {
          uint n; 
          uint b;
          UINT Length;
          char Name[Length];
       } u3[num] <optimize=false>;

        uint b16;
        uint b17; 
        uint b18;
        if (version > 42)
          uint b19;
        break;
      case 7:
        float b15;
        float b16;
        float b17;
        float b18;
    
        uint b19; 
        float b20;
        float b21;
        float b22;

        uint b23;
        uint b24;
        uint b25;
        float b26; 
        float b27;

        if (version > 10)
        {
          uint b28;
          float b29;
          float b30;
          float b31;
          float b32;
          float b27;
        }

        float b27;
        break;
      case 10:
        uint b15;
        uint b16;
        uint b17;
        uint b18; 

        if (version > 35)
        {
          uint b19;
          uint b20;
          uint b21;
          uint b22;

          uint b23;
          uint b24;
        }

        uint b25;
        break;
      case 11:
        uint b;
        uint b;
        uint b;
        uint num;



        struct {
          uint b1;
            uint b2;
            char name[b2];
          UINT Length;
          char Name[Length];
          UINT Length;
          char Name1[Length];
        float b;
        } u2[num] <optimize=false>;  
        break;
      case 12:
        uint b15;
        uint b16;
        uint b17;
        uint b18; 
        uint b19;
        uint b20;
        uint b21;
        uint b22;
        uint b23;
        uint b24;
        uint b25;
        uint b26; 

        if (version >= 24)
        {
          uint num;
        }; 

        if (version >= 26)
        {
          UINT Length;
          char Name13[Length];
        };

        if (version >= 36)
        {
          uint b28;
        };

        switch () 
        {
          case 0:
            break;
          case 1:
            uint b29;
            uint b30;
            uint b31;
            uint b32;
            uint b33;
            uint b34;
            uint b35; 
            uint b36;

            uint num;
            struct {
              uint b;
              uint b;
              uint b; 
              uint b;
            } asdf[num];

            uint b37;
            break;
          case 2:
            uint b29;
            uint b30;
            uint b31;
            uint b32;
            uint b33;
            uint b34;
            uint b35; 
            uint b36;
            break;
          case 3:
            break;
          case 4:
            break;
          case 5:
            break;
          case 6:
            break;
          case 7:
            break;
          case 8:
            break;
          case 9:
            break; 
        };
        break;
      case 13:
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;


        break;
      case 15:
        uint b;
        uint b;
        uint b;
        uint b;
        float b2[6];
        uint b;
        uint num;
        uint tb[num];
        uint num1;
        uint s[num1];
        break;
      case 16:
        uint b15;
        float b16;
        float b17;
        float b18;
        float b19;
        float b20;
        float b21;
        float b22;
        float b23;
        float b24;
        float b25;
        float b26;
        float b27;
        float b28;
        float b29;
        float b30;
        float b31;
        float b32;
        float b33;

        if (version > 14)
        {
          float b34;
          float b35;
        }

        if (version > 25)
        {
          float b36;
          float b37;
          float b38;
          float b39;
          float b40;
        }

        if (version > 29)
        {
          uint b41;
          uint b42[32];
          float b43;
          float b44;
          float b45;
        }

        if (version > 41)
        {
          float b46;
          float b47;
          float b48;
          float b49;
          float b50;
          float b51;
          float b52;
        }

        if (version > 42)
        {
          float b53;
          float b54;
        }

        if (version > 49)
        {
          float b55;
          float b56;
        }
        
        break;
      case 17:
        uint b15;
        uint b16;        
        uint b17; 
        uint b18; 

        if (version > 5)
        {
          uint b19;
          uint b20;
          uint b21;
          uint b22;
          uint b23;
          uint b24;
        }

        if (version > 47)
        {
          uint b25;
          uint b26;
        }      
  
        UINT b27;
        UINT b28;

        uint num;
        struct {
          INT b; //b28
          INT b; //b29
          INT b;  //b30
          UINT Length;
          char Name[Length];
        } u3[num] <optimize=false>;

        if (version > 42)
        {
          uint b31;
          uint b32;
          struct {
            uint b33;
            uint b34;
            UINT Length;
            char Name33w[Length];
            UINT Length;
            char Name33w2[Length];
            float b35;
            float b36;
            float b37;
          } gh[b32];
        };
        break;
      case 18:
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        break;
      case 20:
        uint b;
       uint b;
       uint b;
       uint b;
       uint b;
       uint b;
       uint b;
       uint b;
       uint b;

        break;
      case 21:
        uint bew;
        uint b;
        uint b;
        uint b;   
        uint num;
        uint b54;
        uint b;
        uint b;
        uint b;
        uint bwarn;   
  
            struct {
               UINT Length;
               char Name[Length];
                uint b;
               uint b;
               uint b; 

            } ap[bwarn];
        uint b;     
        uint b;   
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;       
        uint b;     
        uint b;
        uint num34;
        uint a[num34*2];

        break;
      case 25:
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        
        struct {
          float b;
          uint b;
          uint b;
          float b;
        } a[7];
        uint b; 
        break;
      case 26:
        uint b;
        uint b;
        uint b;
        uint b;
        break;
      case 29:
        uint b15;
        uint b16;
        uint b17;
        uint b18;
        uint b19;
        uint b20;
        uint b21; 
         uint b22; 
        if (version >= 19)
        {
          uint b23;
          uint b24; 
          uint b25; 
        };  
        if (version >= 27)
        {
          uint b26;
          uint b27;  
        };    
        if (version >= 19)
        {
          uint b28;
          uint b29; 
        };  
        if (version >= 27)
        {
          uint b30;  
        }; 
        if (version >= 19)
        {
          uint b31;
          uint b32; 
          uint b33; 
          uint b34;
        };   

        uint num;
        struct {
          uint b;
          uint b; 
          uint b; 
          uint b;   
        } d[num];

        if (version >= 21)
        {
          uint b30;  
          uint b;
          uint b; 
          uint b; 
          uint b;  
          uint b; 
        };          
        break;
      case NODE_TYPE_Matrix_Animation:
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        break;
      case NODE_TYPE_Matrix_TRIGGER:
         uint b;
        uint b;
        uint b;
        uint b;
        uint b;
        uint b;   

        break;
      case 30:
        uint b14;
        uint b15; 
        uint b16;
        uint b17;
        uint b18;
        uint b19; 
        uint b20;
        uint b21;

        if (version > 41)
          uint b22;
       break;
    };
 
  } NODE[B] <optimize=false>;
