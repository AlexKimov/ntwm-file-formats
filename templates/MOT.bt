//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

typedef struct {     
  UINT Length;
  CHAR Text[Length];
} CSTRING; 

//----------------------------

struct {
  UINT Unknown;
  FLOAT Unknown;
  UINT Unknown;
  FLOAT Unknown;
  FLOAT Unknown;
  UINT Unknown;
  FLOAT Unknown;
} HEADER;

UINT BoneCount;

typedef struct {
  FLOAT KeyTime;
  CSTRING Name;

  UINT KeyCount;
  struct {
    FLOAT KeyTime;
    FLOAT x;
    FLOAT y;
    FLOAT z;
    FLOAT w;
  } ROTATION[KeyCount];

  UINT KeyCount;
  struct {
    FLOAT KeyTime;
    FLOAT y;
    FLOAT z;
    FLOAT w;
  } POSITION[KeyCount];

  UINT KeyCount;
  struct {
    FLOAT KeyTime;
    FLOAT y;
    FLOAT z;
    FLOAT w;
  } SCALE[KeyCount];

  UINT Unknown; // 0
} BONE <name=getName>;

BONE Bone[BoneCount] <optimize=false>;

string getName(BONE &bone){
  return bone.Name.Text;
};